{"ast":null,"code":"// 设置一个请求拦截器，每次请求返回的结果会先运行拦截器\nimport axios from \"axios\";\nimport showMessage from \"@/utils/showMessage\";\nconst ins = axios.create(); // 创建一个 axios 的实例 , 使用 axios 发送 ajax 请求\n\nins.interceptors.response.use(function (resp) {\n  if (resp.data.code !== 0) {\n    // 设置一个响应的拦截器，判断请求返回的数据是否有错误，有错误就调用 shouMessage()方法提示错误\n    console.log(resp.data);\n    showMessage({\n      content: 'error',\n      type: 'error',\n      duration: 2000\n    });\n    return null;\n  }\n\n  return resp.data.data;\n});\nexport default ins; // ins 是一个 axios 实例","map":{"version":3,"names":["axios","showMessage","ins","create","interceptors","response","use","resp","data","code","console","log","content","type","duration"],"sources":["/Users/linwinwin/Desktop/mysit2/mysite-client/src/api/request.js"],"sourcesContent":["// 设置一个请求拦截器，每次请求返回的结果会先运行拦截器\nimport axios from \"axios\";\nimport showMessage from \"@/utils/showMessage\";\n\nconst ins = axios.create(); // 创建一个 axios 的实例 , 使用 axios 发送 ajax 请求\nins.interceptors.response.use(function (resp) {\n    if (resp.data.code !== 0) { // 设置一个响应的拦截器，判断请求返回的数据是否有错误，有错误就调用 shouMessage()方法提示错误\n        console.log(resp.data)\n        showMessage({\n            content: 'error',\n            type: 'error',\n            duration: 2000,\n        })\n        return null;\n    }\n    return resp.data.data;\n});\nexport default ins; // ins 是一个 axios 实例"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,EAAZ,C,CAA4B;;AAC5BD,GAAG,CAACE,YAAJ,CAAiBC,QAAjB,CAA0BC,GAA1B,CAA8B,UAAUC,IAAV,EAAgB;EAC1C,IAAIA,IAAI,CAACC,IAAL,CAAUC,IAAV,KAAmB,CAAvB,EAA0B;IAAE;IACxBC,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,IAAjB;IACAP,WAAW,CAAC;MACRW,OAAO,EAAE,OADD;MAERC,IAAI,EAAE,OAFE;MAGRC,QAAQ,EAAE;IAHF,CAAD,CAAX;IAKA,OAAO,IAAP;EACH;;EACD,OAAOP,IAAI,CAACC,IAAL,CAAUA,IAAjB;AACH,CAXD;AAYA,eAAeN,GAAf,C,CAAoB"},"metadata":{},"sourceType":"module"}