{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MessageArea from \"@/components/MessageArea\";\nimport fetch from \"@/mixins/fetchData.js\";\nimport { getMessage, postMessage } from \"@/api/message.js\";\nimport Loading from \"@/components/Loading.vue\";\nexport default {\n  mixins: [fetch({})],\n\n  data() {\n    return {\n      page: 1,\n      limit: 10\n    };\n  },\n\n  components: {\n    MessageArea,\n    Loading\n  },\n  computed: {\n    hasMore() {\n      // 判断是否还有剩余的数据，当 data.rows.length 小于总数时，就表示还有数据的， 该计算属性用于指导还能否加载更多的评论数据\n      if (this.data.rows) {\n        return this.data.rows.length < this.data.total;\n      }\n\n      return false;\n    }\n\n  },\n  methods: {\n    async fetchData() {\n      //数据是每次都远程获取的，不是放在数据仓库的 , 每次加载 limit 条\n      return await getMessage(this.page, this.limit); // return await getMessage(this.page, this.limit);\n    },\n\n    async fetchMoreDate() {\n      if (!this.hasMore) {\n        // 没有更多的留言数据了\n        return;\n      }\n\n      this.isLoading = true;\n      this.page++;\n      const resp = await this.fetchData();\n      this.data.total = resp.total;\n      this.data.rows = this.data.rows.concat(resp.rows);\n      this.isLoading = false;\n    },\n\n    async handleSubmit(formData, callback) {\n      // 父组件可以处理了，提交一条留言\n      const resp = await postMessage({\n        nickname: formData.nickname,\n        content: formData.content\n      });\n      this.data.rows.unshift(resp);\n      this.data.total++; //父组件处理完了，执行回掉函数，并传递一个参数\n\n      callback(\"留言成功!\");\n    },\n\n    handleScroll(dom) {\n      if (this.isLoading) {\n        // 如果当前还正在加载就不需要继续加载了，防止事件一直在发生\n        return;\n      } // 当滚动条滚动到底部时，触发 fetchMoreData()\n\n\n      const range = 50; // 一个可接受的范围，在这个范围内都滚动条算到达了底部\n\n      const gap = Math.abs(dom.scrollTop + dom.clientHeight - dom.scrollHeight);\n\n      if (gap < range) {\n        this.fetchMoreDate();\n      }\n    }\n\n  },\n\n  created() {\n    this.$bus.$on(\"msgScroll\", this.handleScroll);\n  },\n\n  beforeDestroy() {\n    this.$bus.$off(\"msgScroll\", this.handleScroll);\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;EACAA,mBADA;;EAEAC;IACA;MACAC,OADA;MAEAC;IAFA;EAIA,CAPA;;EAQAC;IACAC,WADA;IAEAC;EAFA,CARA;EAYAC;IACAC;MACA;MACA;QACA;MACA;;MACA;IACA;;EAPA,CAZA;EAqBAC;IACA;MACA;MACA,+CAFA,CAIA;IACA,CANA;;IAQA;MACA;QACA;QACA;MACA;;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAnBA;;IAoBA;MACA;MACA;QACAC,2BADA;QAEAC;MAFA;MAIA;MACA,kBAPA,CAQA;;MACAC;IACA,CA9BA;;IAgCAC;MACA;QACA;QACA;MACA,CAJA,CAKA;;;MACA,iBANA,CAMA;;MACA;;MACA;QACA;MACA;IACA;;EA3CA,CArBA;;EAkEAC;IACA;EACA,CApEA;;EAqEAC;IACA;EACA;;AAvEA","names":["mixins","data","page","limit","components","MessageArea","Loading","computed","hasMore","methods","nickname","content","callback","handleScroll","created","beforeDestroy"],"sourceRoot":"src/views/Message","sources":["Message.vue"],"sourcesContent":["<template>\n  <div class=\"message\">\n    <Loading v-if=\"!data.rows\"></Loading>\n    <template v-if=\"data.rows\">\n      <MessageArea\n        title=\"留言板\"\n        :subTitle=\"data.total + ''\"\n        :list=\"data.rows\"\n        :isLoading=\"false\"\n        @submit=\"handleSubmit\"\n      ></MessageArea>\n      <div class=\"Loding\">\n        <Loading v-if=\"isLoading\"></Loading>\n        <span v-if=\"!hasMore\" class=\"noComment\">没有更多的留言了</span>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport MessageArea from \"@/components/MessageArea\";\nimport fetch from \"@/mixins/fetchData.js\";\nimport { getMessage, postMessage } from \"@/api/message.js\";\nimport Loading from \"@/components/Loading.vue\";\nexport default {\n  mixins: [fetch({})],\n  data() {\n    return {\n      page: 1,\n      limit: 10,\n    };\n  },\n  components: {\n    MessageArea,\n    Loading,\n  },\n  computed: {\n    hasMore() {\n      // 判断是否还有剩余的数据，当 data.rows.length 小于总数时，就表示还有数据的， 该计算属性用于指导还能否加载更多的评论数据\n      if (this.data.rows) {\n        return this.data.rows.length < this.data.total;\n      }\n      return false;\n    },\n  },\n  methods: {\n    async fetchData() {\n      //数据是每次都远程获取的，不是放在数据仓库的 , 每次加载 limit 条\n      return await getMessage(this.page, this.limit);\n\n      // return await getMessage(this.page, this.limit);\n    },\n\n    async fetchMoreDate() {\n      if (!this.hasMore) {\n        // 没有更多的留言数据了\n        return;\n      }\n      this.isLoading = true;\n      this.page++;\n      const resp = await this.fetchData();\n      this.data.total = resp.total;\n      this.data.rows = this.data.rows.concat(resp.rows);\n      this.isLoading = false;\n    },\n    async handleSubmit(formData, callback) {\n      // 父组件可以处理了，提交一条留言\n      const resp = await postMessage({\n        nickname: formData.nickname,\n        content: formData.content,\n      });\n      this.data.rows.unshift(resp);\n      this.data.total++;\n      //父组件处理完了，执行回掉函数，并传递一个参数\n      callback(\"留言成功!\");\n    },\n\n    handleScroll(dom) {\n      if (this.isLoading) {\n        // 如果当前还正在加载就不需要继续加载了，防止事件一直在发生\n        return;\n      }\n      // 当滚动条滚动到底部时，触发 fetchMoreData()\n      const range = 50; // 一个可接受的范围，在这个范围内都滚动条算到达了底部\n      const gap = Math.abs(dom.scrollTop + dom.clientHeight - dom.scrollHeight);\n      if (gap < range) {\n        this.fetchMoreDate();\n      }\n    },\n  },\n  created() {\n    this.$bus.$on(\"msgScroll\", this.handleScroll);\n  },\n  beforeDestroy() {\n    this.$bus.$off(\"msgScroll\", this.handleScroll);\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n@import \"~@/style/var.less\";\n@import \"~@/style/mix.less\";\n.message {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  margin: 30px 10px;\n  .Loding {\n    height: 130px;\n    width: 100%;\n    position: relative;\n  }\n  .noComment {\n    color: @gray;\n    font-size: 16px;\n    .self-center();\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}