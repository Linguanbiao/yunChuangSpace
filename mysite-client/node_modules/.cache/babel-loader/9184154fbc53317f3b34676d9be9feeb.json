{"ast":null,"code":"import _asyncToGenerator from \"/Users/linwinwin/Desktop/mysit2/mysite-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MessageArea from \"@/components/MessageArea\";\nimport fetch from \"@/mixins/fetchData.js\";\nimport { getMessage, postMessage } from \"@/api/message.js\";\nimport Loading from \"@/components/Loading.vue\";\nexport default {\n  mixins: [fetch({})],\n  data: function data() {\n    return {\n      page: 1,\n      limit: 10\n    };\n  },\n  components: {\n    MessageArea: MessageArea,\n    Loading: Loading\n  },\n  computed: {\n    hasMore: function hasMore() {\n      // 判断是否还有剩余的数据，当 data.rows.length 小于总数时，就表示还有数据的， 该计算属性用于指导还能否加载更多的评论数据\n      if (this.data.rows) {\n        return this.data.rows.length < this.data.total;\n      }\n\n      return false;\n    }\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var resp;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //数据是每次都远程获取的，不是放在数据仓库的 , 每次加载 limit 条\n                setTimeout(function () {\n                  resp = getMessage(_this.page, _this.limit);\n                }, 2000);\n                return _context.abrupt(\"return\", resp);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    fetchMoreDate: function fetchMoreDate() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var resp;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (_this2.hasMore) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _this2.isLoading = true;\n                _this2.page++;\n                _context2.next = 6;\n                return _this2.fetchData();\n\n              case 6:\n                resp = _context2.sent;\n                _this2.data.total = resp.total;\n                _this2.data.rows = _this2.data.rows.concat(resp.rows);\n                _this2.isLoading = false;\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    handleSubmit: function handleSubmit(formData, callback) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var resp;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return postMessage({\n                  nickname: formData.nickname,\n                  content: formData.content\n                });\n\n              case 2:\n                resp = _context3.sent;\n\n                _this3.data.rows.unshift(resp);\n\n                _this3.data.total++; //父组件处理完了，执行回掉函数，并传递一个参数\n\n                callback(\"留言成功!\");\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    handleScroll: function handleScroll(dom) {\n      if (this.isLoading) {\n        // 如果当前还正在加载就不需要继续加载了，防止事件一直在发生\n        return;\n      } // 当滚动条滚动到底部时，触发 fetchMoreData()\n\n\n      var range = 50; // 一个可接受的范围，在这个范围内都滚动条算到达了底部\n\n      var gap = Math.abs(dom.scrollTop + dom.clientHeight - dom.scrollHeight);\n\n      if (gap < range) {\n        this.fetchMoreDate();\n      }\n    }\n  },\n  created: function created() {\n    this.$bus.$on(\"msgScroll\", this.handleScroll);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$bus.$off(\"msgScroll\", this.handleScroll);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;EACAA,mBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,OADA;MAEAC;IAFA;EAIA,CAPA;EAQAC;IACAC,wBADA;IAEAC;EAFA,CARA;EAYAC;IACAC,OADA,qBACA;MACA;MACA;QACA;MACA;;MACA;IACA;EAPA,CAZA;EAqBAC;IACAC,SADA,uBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACA;gBAEAC;kBACAC;gBACA,CAFA,EAEA,IAFA;gBAHA,iCAMAA,IANA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CATA;IAWAC,aAXA,2BAWA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,IACA,cADA;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAKA;gBACA;gBANA;gBAAA,OAOA,kBAPA;;cAAA;gBAOAD,IAPA;gBAQA;gBACA;gBACA;;cAVA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAWA,CAtBA;IAuBAE,YAvBA,wBAuBAC,QAvBA,EAuBAC,QAvBA,EAuBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEAC;kBACAC,2BADA;kBAEAC;gBAFA,EAFA;;cAAA;gBAEAP,IAFA;;gBAMA;;gBACA,oBAPA,CAQA;;gBACAI;;cATA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAUA,CAjCA;IAmCAI,YAnCA,wBAmCAC,GAnCA,EAmCA;MACA;QACA;QACA;MACA,CAJA,CAKA;;;MACA,eANA,CAMA;;MACA;;MACA;QACA;MACA;IACA;EA9CA,CArBA;EAqEAC,OArEA,qBAqEA;IACA;EACA,CAvEA;EAwEAC,aAxEA,2BAwEA;IACA;EACA;AA1EA","names":["mixins","data","page","limit","components","MessageArea","Loading","computed","hasMore","methods","fetchData","setTimeout","resp","fetchMoreDate","handleSubmit","formData","callback","postMessage","nickname","content","handleScroll","dom","created","beforeDestroy"],"sourceRoot":"src/views/Message","sources":["Message.vue"],"sourcesContent":["<template>\n  <div class=\"message\">\n    <Loading v-if=\"!data.rows\"></Loading>\n    <template v-if=\"data.rows\">\n      <MessageArea\n        title=\"留言板\"\n        :subTitle=\"data.total + ''\"\n        :list=\"data.rows\"\n        :isLoading=\"false\"\n        @submit=\"handleSubmit\"\n      ></MessageArea>\n      <div class=\"Loding\">\n        <Loading v-if=\"isLoading\"></Loading>\n        <span v-if=\"!hasMore\" class=\"noComment\">没有更多的留言了</span>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport MessageArea from \"@/components/MessageArea\";\nimport fetch from \"@/mixins/fetchData.js\";\nimport { getMessage, postMessage } from \"@/api/message.js\";\nimport Loading from \"@/components/Loading.vue\";\nexport default {\n  mixins: [fetch({})],\n  data() {\n    return {\n      page: 1,\n      limit: 10,\n    };\n  },\n  components: {\n    MessageArea,\n    Loading,\n  },\n  computed: {\n    hasMore() {\n      // 判断是否还有剩余的数据，当 data.rows.length 小于总数时，就表示还有数据的， 该计算属性用于指导还能否加载更多的评论数据\n      if (this.data.rows) {\n        return this.data.rows.length < this.data.total;\n      }\n      return false;\n    },\n  },\n  methods: {\n    async fetchData() {\n      //数据是每次都远程获取的，不是放在数据仓库的 , 每次加载 limit 条\n      let resp;\n      setTimeout(() => {\n        resp = getMessage(this.page, this.limit);\n      }, 2000);\n      return resp;\n      // return await getMessage(this.page, this.limit);\n    },\n\n    async fetchMoreDate() {\n      if (!this.hasMore) {\n        // 没有更多的留言数据了\n        return;\n      }\n      this.isLoading = true;\n      this.page++;\n      const resp = await this.fetchData();\n      this.data.total = resp.total;\n      this.data.rows = this.data.rows.concat(resp.rows);\n      this.isLoading = false;\n    },\n    async handleSubmit(formData, callback) {\n      // 父组件可以处理了，提交一条留言\n      const resp = await postMessage({\n        nickname: formData.nickname,\n        content: formData.content,\n      });\n      this.data.rows.unshift(resp);\n      this.data.total++;\n      //父组件处理完了，执行回掉函数，并传递一个参数\n      callback(\"留言成功!\");\n    },\n\n    handleScroll(dom) {\n      if (this.isLoading) {\n        // 如果当前还正在加载就不需要继续加载了，防止事件一直在发生\n        return;\n      }\n      // 当滚动条滚动到底部时，触发 fetchMoreData()\n      const range = 50; // 一个可接受的范围，在这个范围内都滚动条算到达了底部\n      const gap = Math.abs(dom.scrollTop + dom.clientHeight - dom.scrollHeight);\n      if (gap < range) {\n        this.fetchMoreDate();\n      }\n    },\n  },\n  created() {\n    this.$bus.$on(\"msgScroll\", this.handleScroll);\n  },\n  beforeDestroy() {\n    this.$bus.$off(\"msgScroll\", this.handleScroll);\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n@import \"~@/style/var.less\";\n@import \"~@/style/mix.less\";\n.message {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  margin: 30px 10px;\n  .Loding {\n    height: 130px;\n    width: 100%;\n    position: relative;\n  }\n  .noComment {\n    color: @gray;\n    font-size: 16px;\n    .self-center();\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}