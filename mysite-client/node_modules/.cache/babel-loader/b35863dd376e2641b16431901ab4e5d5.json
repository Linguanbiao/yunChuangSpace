{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/linwinwin/Desktop/mysit2/mysite-client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n\n/**\n * 自定义指令 v-lazy ： 用于图片懒加载\n */\nimport eventBus from \"../eventBus.js\";\nimport lazyLoading from \"../assets/Search.gif\";\nimport { debounce } from \"@/utils/debounce.js\";\nvar imgs = [];\n\nfunction setImag(img) {\n  // 为所有图片都先加载一个图片\n  img.dom.src = lazyLoading; // 首先判断图片是否在视口范围内\n\n  var clientHeight = document.documentElement.clientHeight; // 获取视口的高度\n\n  var rect = img.dom.getBoundingClientRect(); // 获取 dom 元素离视口的距离\n\n  var height = rect.height || 150;\n\n  if (rect.top >= -height && rect.top <= clientHeight) {\n    // 在视口范围内\n    img.dom.src = img.src; // 处理完成以后把当前的图片过滤掉，加载完了以后就不用再继续处理了\n\n    imgs = imgs.filter(function (i) {\n      return i !== img;\n    });\n  }\n} // 希望使用该方法 ， 就可以设置那些合适的图片 \n\n\nfunction setImags() {\n  var _iterator = _createForOfIteratorHelper(imgs),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var img = _step.value;\n      // 循环图片数组里的图片并依次处理图片\n      setImag(img);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction handleScroll() {\n  //监听到页面的滚动条事件，做相应的图片懒加载功能\n  setImags();\n}\n\neventBus.$on(\"mainScroll\", debounce(handleScroll, 50));\nexport default {\n  /**\n   * bind 为自定义指令的钩子函数，只使用一次，指令第一次绑定到元素上使用，在这里可以进行一次性的初始化设置\n   * el : 指令所绑定的元素， 可以用来直接操作 dom\n   * bindings : 钩子函数传入的一个参数对象，{name , value , oldValue ...} 具体可以看文档\n   */\n  inserted: function inserted(el, bindings) {\n    var img = {\n      dom: el,\n      // 当前指令绑定的 dom 元素，这里是 img 元素\n      src: bindings.value //  img 元素的真实图片地址\n\n    };\n    imgs.push(img);\n    setImag(img); //立即渲染\n  },\n  // unbind 为指令与元素解绑，也是只调用一次\n  unbind: function unbind(el) {\n    imgs = imgs.filter(function (img) {\n      return img.dom !== el;\n    });\n  }\n};","map":{"version":3,"names":["eventBus","lazyLoading","debounce","imgs","setImag","img","dom","src","clientHeight","document","documentElement","rect","getBoundingClientRect","height","top","filter","i","setImags","handleScroll","$on","inserted","el","bindings","value","push","unbind"],"sources":["/Users/linwinwin/Desktop/mysit2/mysite-client/src/directives/lazy.js"],"sourcesContent":["/**\n * 自定义指令 v-lazy ： 用于图片懒加载\n */\n\nimport eventBus from \"../eventBus.js\"\nimport lazyLoading from \"../assets/Search.gif\"\nimport {\n    debounce\n} from \"@/utils/debounce.js\"\n\nlet imgs = []\n\n\n\nfunction setImag(img) {\n    // 为所有图片都先加载一个图片\n    img.dom.src = lazyLoading\n    // 首先判断图片是否在视口范围内\n    const clientHeight = document.documentElement.clientHeight; // 获取视口的高度\n    const rect = img.dom.getBoundingClientRect(); // 获取 dom 元素离视口的距离\n    const height = rect.height || 150\n    if (rect.top >= -height && rect.top <= clientHeight) {\n        // 在视口范围内\n        img.dom.src = img.src\n        // 处理完成以后把当前的图片过滤掉，加载完了以后就不用再继续处理了\n        imgs = imgs.filter((i) => i !== img)\n    }\n}\n\n// 希望使用该方法 ， 就可以设置那些合适的图片 \nfunction setImags() {\n    for (let img of imgs) {\n        // 循环图片数组里的图片并依次处理图片\n        setImag(img)\n    }\n}\n\nfunction handleScroll() {\n    //监听到页面的滚动条事件，做相应的图片懒加载功能\n    setImags()\n}\n\neventBus.$on(\"mainScroll\", debounce(handleScroll, 50))\nexport default {\n    /**\n     * bind 为自定义指令的钩子函数，只使用一次，指令第一次绑定到元素上使用，在这里可以进行一次性的初始化设置\n     * el : 指令所绑定的元素， 可以用来直接操作 dom\n     * bindings : 钩子函数传入的一个参数对象，{name , value , oldValue ...} 具体可以看文档\n     */\n    inserted(el, bindings) {\n        const img = {\n            dom: el, // 当前指令绑定的 dom 元素，这里是 img 元素\n            src: bindings.value //  img 元素的真实图片地址\n        }\n        imgs.push(img)\n        setImag(img) //立即渲染\n    },\n    // unbind 为指令与元素解绑，也是只调用一次\n    unbind(el) {\n        imgs = imgs.filter((img) => img.dom !== el)\n    }\n}"],"mappings":";;;;AAAA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,gBAArB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SACIC,QADJ,QAEO,qBAFP;AAIA,IAAIC,IAAI,GAAG,EAAX;;AAIA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;EAClB;EACAA,GAAG,CAACC,GAAJ,CAAQC,GAAR,GAAcN,WAAd,CAFkB,CAGlB;;EACA,IAAMO,YAAY,GAAGC,QAAQ,CAACC,eAAT,CAAyBF,YAA9C,CAJkB,CAI0C;;EAC5D,IAAMG,IAAI,GAAGN,GAAG,CAACC,GAAJ,CAAQM,qBAAR,EAAb,CALkB,CAK4B;;EAC9C,IAAMC,MAAM,GAAGF,IAAI,CAACE,MAAL,IAAe,GAA9B;;EACA,IAAIF,IAAI,CAACG,GAAL,IAAY,CAACD,MAAb,IAAuBF,IAAI,CAACG,GAAL,IAAYN,YAAvC,EAAqD;IACjD;IACAH,GAAG,CAACC,GAAJ,CAAQC,GAAR,GAAcF,GAAG,CAACE,GAAlB,CAFiD,CAGjD;;IACAJ,IAAI,GAAGA,IAAI,CAACY,MAAL,CAAY,UAACC,CAAD;MAAA,OAAOA,CAAC,KAAKX,GAAb;IAAA,CAAZ,CAAP;EACH;AACJ,C,CAED;;;AACA,SAASY,QAAT,GAAoB;EAAA,2CACAd,IADA;EAAA;;EAAA;IAChB,oDAAsB;MAAA,IAAbE,GAAa;MAClB;MACAD,OAAO,CAACC,GAAD,CAAP;IACH;EAJe;IAAA;EAAA;IAAA;EAAA;AAKnB;;AAED,SAASa,YAAT,GAAwB;EACpB;EACAD,QAAQ;AACX;;AAEDjB,QAAQ,CAACmB,GAAT,CAAa,YAAb,EAA2BjB,QAAQ,CAACgB,YAAD,EAAe,EAAf,CAAnC;AACA,eAAe;EACX;AACJ;AACA;AACA;AACA;EACIE,QANW,oBAMFC,EANE,EAMEC,QANF,EAMY;IACnB,IAAMjB,GAAG,GAAG;MACRC,GAAG,EAAEe,EADG;MACC;MACTd,GAAG,EAAEe,QAAQ,CAACC,KAFN,CAEY;;IAFZ,CAAZ;IAIApB,IAAI,CAACqB,IAAL,CAAUnB,GAAV;IACAD,OAAO,CAACC,GAAD,CAAP,CANmB,CAMN;EAChB,CAbU;EAcX;EACAoB,MAfW,kBAeJJ,EAfI,EAeA;IACPlB,IAAI,GAAGA,IAAI,CAACY,MAAL,CAAY,UAACV,GAAD;MAAA,OAASA,GAAG,CAACC,GAAJ,KAAYe,EAArB;IAAA,CAAZ,CAAP;EACH;AAjBU,CAAf"},"metadata":{},"sourceType":"module"}