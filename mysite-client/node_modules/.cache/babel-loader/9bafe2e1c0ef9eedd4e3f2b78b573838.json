{"ast":null,"code":"import \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\n\n/**\n * \n * @param {当前的时间戳} timestamp \n * @param {是否显示时-分-秒} showTime \n * @returns 日期时间\n */\nexport default function (timestamp) {\n  var showTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  // timestamp ： 时间戳\n  var date = new Date(+timestamp); // 添加 + 号是为了转成 数字类型\n  // padStart(a , b) 至少要有 a 为， 不足的前面用 b 补充\n\n  var month = (date.getMonth() + 1).toString().padStart(2, '0');\n  var day = date.getDate().toString().padStart(2, '0');\n  var str = \"\".concat(date.getFullYear(), \"-\").concat(month, \"-\").concat(day);\n\n  if (showTime) {\n    var hour = date.getHours().toString().padStart(2, '0');\n    var minute = date.getMinutes().toString().padStart(2, '0');\n    var second = date.getSeconds().toString().padStart(2, '0');\n    str += \" \".concat(hour, \":\").concat(minute, \":\").concat(second);\n  }\n\n  return str;\n}","map":{"version":3,"names":["timestamp","showTime","date","Date","month","getMonth","toString","padStart","day","getDate","str","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds"],"sources":["/Users/linwinwin/Desktop/mysit2/mysite-client/src/utils/formatDate.js"],"sourcesContent":["/**\n * \n * @param {当前的时间戳} timestamp \n * @param {是否显示时-分-秒} showTime \n * @returns 日期时间\n */\nexport default function (timestamp, showTime = false) {\n    // timestamp ： 时间戳\n    const date = new Date(+timestamp); // 添加 + 号是为了转成 数字类型\n    // padStart(a , b) 至少要有 a 为， 不足的前面用 b 补充\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = (date.getDate()).toString().padStart(2, '0');\n\n    let str = `${date.getFullYear()}-${month}-${day}`;\n    if (showTime) {\n        const hour = date.getHours().toString().padStart(2, '0');\n        const minute = date.getMinutes().toString().padStart(2, '0');\n        const second = date.getSeconds().toString().padStart(2, '0');\n        str += ` ${hour}:${minute}:${second}`;\n    }\n    return str\n}"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAUA,SAAV,EAAuC;EAAA,IAAlBC,QAAkB,uEAAP,KAAO;EAClD;EACA,IAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACH,SAAV,CAAb,CAFkD,CAEf;EACnC;;EACA,IAAMI,KAAK,GAAG,CAACF,IAAI,CAACG,QAAL,KAAkB,CAAnB,EAAsBC,QAAtB,GAAiCC,QAAjC,CAA0C,CAA1C,EAA6C,GAA7C,CAAd;EACA,IAAMC,GAAG,GAAIN,IAAI,CAACO,OAAL,EAAD,CAAiBH,QAAjB,GAA4BC,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CAAZ;EAEA,IAAIG,GAAG,aAAMR,IAAI,CAACS,WAAL,EAAN,cAA4BP,KAA5B,cAAqCI,GAArC,CAAP;;EACA,IAAIP,QAAJ,EAAc;IACV,IAAMW,IAAI,GAAGV,IAAI,CAACW,QAAL,GAAgBP,QAAhB,GAA2BC,QAA3B,CAAoC,CAApC,EAAuC,GAAvC,CAAb;IACA,IAAMO,MAAM,GAAGZ,IAAI,CAACa,UAAL,GAAkBT,QAAlB,GAA6BC,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAf;IACA,IAAMS,MAAM,GAAGd,IAAI,CAACe,UAAL,GAAkBX,QAAlB,GAA6BC,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAf;IACAG,GAAG,eAAQE,IAAR,cAAgBE,MAAhB,cAA0BE,MAA1B,CAAH;EACH;;EACD,OAAON,GAAP;AACH"},"metadata":{},"sourceType":"module"}