{"ast":null,"code":"import _asyncToGenerator from \"/Users/linwinwin/Desktop/mysit2/mysite-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport fetch from \"@/mixins/fetchData.js\";\nimport { getBlogs } from \"@/api/blog.js\";\nimport Loading from \"@/components/Loading.vue\";\nimport Layout from \"@/components/Layout.vue\";\nimport formatDate from \"@/utils/formatDate.js\";\nimport Pager from \"@/components/Pager.vue\";\nexport default {\n  components: {\n    Loading: Loading,\n    Layout: Layout,\n    Pager: Pager\n  },\n  mixins: [fetch({})],\n  computed: {\n    // 获取路由信息\n    getRouteInfo: function getRouteInfo() {\n      var categoryId = +this.$route.params.categoryId || -1;\n      var page = +this.$route.query.page || 1;\n      var limit = +this.$route.query.limit || 10;\n      return {\n        categoryId: categoryId,\n        page: page,\n        limit: limit\n      };\n    }\n  },\n  watch: {\n    /**\n     * watch  可以监听数据是否发生了变化并进行操作\n     * 在这里，我们需要监听 page 发生了变化，并发变化后的 page 对应的数据 data 获取到并渲染\n     */\n    $route: function $route() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.isLoading = true; // 将滚动条置顶, 滚动条高度为0\n\n                _this.$refs.blogContainer.scollTop = 0;\n                _context.next = 4;\n                return _this.fetchData();\n\n              case 4:\n                _this.data = _context.sent;\n                _this.isLoading = false;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  methods: {\n    formatDate: formatDate,\n    fetchData: function fetchData() {\n      return getBlogs(this.getRouteInfo.page, this.getRouteInfo.limit, this.getRouteInfo.categoryId);\n    },\n    handlePageChange: function handlePageChange(newPage) {\n      //处理更新的页码， 根据新的页码进行更新路由，并进行无刷新跳转\n\n      /**\n       * 两种跳转情况\n       * 第一种是（无分类）： /blog?page=${newPage}&limit=${this.getRouteInfo.limit}\n       * 第二种是（有分类）： /blog/cate/${this.getRouteInfo.categoryId}?page=${newPage}&limit=${this.getRouteInfo.limit}\n       */\n      if (this.getRouteInfo.categoryId === -1) {\n        //代码中的路由跳转，使用 vue-router 提供的实例 router 进行 push 跳转\n        this.$router.push(\"/blog?page=\".concat(newPage, \"&limit=\").concat(this.getRouteInfo.limit));\n      } else {\n        this.$router.push(\"/blog/cate/\".concat(this.getRouteInfo.categoryId, \"?page=\").concat(newPage, \"&limit=\").concat(this.getRouteInfo.limit));\n      }\n    },\n    handleScroll: function handleScroll() {\n      // 当前页面的滚动条发生变化的话，触发一个事件\n      this.$bus.$emit(\"mainScroll\", this.$refs.blogContainer);\n    }\n  },\n  mounted: function mounted() {\n    // 元素挂载以后，添加一个滚动条监听事件\n    this.$refs.blogContainer.addEventListener(\"scroll\", this.handleScroll);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$refs.blogContainer.removeEventListener(\"scroll\", this.handleScroll);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;IAAAC;IAAAC;IAAAC;EAAA,CADA;EAEAC,mBAFA;EAGAC;IACA;IACAC,YAFA,0BAEA;MACA;MACA;MACA;MACA;QACAC,sBADA;QAEAC,UAFA;QAGAC;MAHA;IAKA;EAXA,CAHA;EAgBAC;IACA;AACA;AACA;AACA;IACAC,MALA,oBAKA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACA,uBADA,CAEA;;gBACA;gBAHA;gBAAA,OAIA,iBAJA;;cAAA;gBAIA,UAJA;gBAKA;;cALA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMA;EAXA,CAhBA;EA6BAC;IACAC,sBADA;IAEAC,SAFA,uBAEA;MACA,gBACA,sBADA,EAEA,uBAFA,EAGA,4BAHA;IAKA,CARA;IASAC,gBATA,4BASAC,OATA,EASA;MACA;;MACA;AACA;AACA;AACA;AACA;MACA;QACA;QACA,uCACAA,OADA,oBACA,uBADA;MAGA,CALA,MAKA;QACA,uCACA,4BADA,mBACAA,OADA,oBACA,uBADA;MAGA;IACA,CA1BA;IA2BAC,YA3BA,0BA2BA;MACA;MACA;IACA;EA9BA,CA7BA;EA6DAC,OA7DA,qBA6DA;IACA;IACA;EACA,CAhEA;EAiEAC,aAjEA,2BAiEA;IACA;EACA;AAnEA","names":["components","Loading","Layout","Pager","mixins","computed","getRouteInfo","categoryId","page","limit","watch","$route","methods","formatDate","fetchData","handlePageChange","newPage","handleScroll","mounted","beforeDestroy"],"sourceRoot":"src/views/Blog/BlogList","sources":["BlogList.vue"],"sourcesContent":["<template>\n  <div class=\"blog-list-container\" ref=\"blogContainer\">\n    <Loading v-if=\"isLoading\"></Loading>\n    <ul>\n      <li v-for=\"item in data.rows\" :key=\"item.id\">\n        <div class=\"thumb\" v-show=\"item.thumb\">\n          <RouterLink :to=\"`/blog/${item.id}`\">\n            <!-- 使用自定义指令 v-lazy 的功能，添加图片懒加载功能  -->\n            <img\n              v-lazy=\"item.thumb\"\n              :alt=\"item.title\"\n              :title=\"item.title\"\n              class=\"imgItem\"\n            />\n          </RouterLink>\n        </div>\n        <div class=\"main\">\n          <RouterLink :to=\"`/blog/${item.id}`\">\n            <h2>{{ item.title }}</h2>\n          </RouterLink>\n          <div class=\"aside\">\n            <span> 日期:{{ formatDate(item.createDate) }} </span>\n            <span> 浏览:{{ item.scanNumber }} </span>\n            <span> 评论:{{ item.commentNumber }}</span>\n            <!-- <RouterLink\n              :to=\"`/blog/cate/${item.category.id}?page=${getRouteInfo.page}&limit=${getRouteInfo.limit}`\"\n              >{{ item.category.name }}</RouterLink\n            > -->\n          </div>\n          <div class=\"desc\">\n            <p>{{ item.description }}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n    <!-- 分页放到这 -->\n    <Pager\n      v-if=\"data.total\"\n      :current=\"getRouteInfo.page\"\n      :total=\"data.total\"\n      :limit=\"getRouteInfo.page.limit\"\n      :visibleNumber=\"10\"\n      @pageChange=\"handlePageChange\"\n      class=\"pager-container\"\n    ></Pager>\n  </div>\n</template>\n\n<script>\nimport fetch from \"@/mixins/fetchData.js\";\nimport { getBlogs } from \"@/api/blog.js\";\nimport Loading from \"@/components/Loading.vue\";\nimport Layout from \"@/components/Layout.vue\";\nimport formatDate from \"@/utils/formatDate.js\";\nimport Pager from \"@/components/Pager.vue\";\n\nexport default {\n  components: { Loading, Layout, Pager },\n  mixins: [fetch({})],\n  computed: {\n    // 获取路由信息\n    getRouteInfo() {\n      const categoryId = +this.$route.params.categoryId || -1;\n      const page = +this.$route.query.page || 1;\n      const limit = +this.$route.query.limit || 10;\n      return {\n        categoryId,\n        page,\n        limit,\n      };\n    },\n  },\n  watch: {\n    /**\n     * watch  可以监听数据是否发生了变化并进行操作\n     * 在这里，我们需要监听 page 发生了变化，并发变化后的 page 对应的数据 data 获取到并渲染\n     */\n    async $route() {\n      this.isLoading = true;\n      // 将滚动条置顶, 滚动条高度为0\n      this.$refs.blogContainer.scollTop = 0;\n      this.data = await this.fetchData();\n      this.isLoading = false;\n    },\n  },\n  methods: {\n    formatDate,\n    fetchData() {\n      return getBlogs(\n        this.getRouteInfo.page,\n        this.getRouteInfo.limit,\n        this.getRouteInfo.categoryId\n      );\n    },\n    handlePageChange(newPage) {\n      //处理更新的页码， 根据新的页码进行更新路由，并进行无刷新跳转\n      /**\n       * 两种跳转情况\n       * 第一种是（无分类）： /blog?page=${newPage}&limit=${this.getRouteInfo.limit}\n       * 第二种是（有分类）： /blog/cate/${this.getRouteInfo.categoryId}?page=${newPage}&limit=${this.getRouteInfo.limit}\n       */\n      if (this.getRouteInfo.categoryId === -1) {\n        //代码中的路由跳转，使用 vue-router 提供的实例 router 进行 push 跳转\n        this.$router.push(\n          `/blog?page=${newPage}&limit=${this.getRouteInfo.limit}`\n        );\n      } else {\n        this.$router.push(\n          `/blog/cate/${this.getRouteInfo.categoryId}?page=${newPage}&limit=${this.getRouteInfo.limit}`\n        );\n      }\n    },\n    handleScroll() {\n      // 当前页面的滚动条发生变化的话，触发一个事件\n      this.$bus.$emit(\"mainScroll\", this.$refs.blogContainer);\n    },\n  },\n  mounted() {\n    // 元素挂载以后，添加一个滚动条监听事件\n    this.$refs.blogContainer.addEventListener(\"scroll\", this.handleScroll);\n  },\n  beforeDestroy() {\n    this.$refs.blogContainer.removeEventListener(\"scroll\", this.handleScroll);\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n@import \"~@/style/var.less\";\n.blog-list-container {\n  line-height: 1.7;\n  position: relative;\n  padding: 20px;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  overflow-y: auto;\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n}\nli {\n  display: flex;\n  padding: 15px 0;\n  overflow-x: auto;\n  border-bottom: 1px solid @gray;\n  .thumb {\n    flex: 0 0 auto;\n    margin-right: 15px;\n    img {\n      display: flex;\n      align-items: center;\n      max-width: 200px;\n      border-radius: 5px;\n    }\n  }\n}\n.main {\n  flex: 1 1 auto;\n  h2 {\n    margin: 0;\n  }\n}\n.aside {\n  font-size: 12px;\n  color: @gray;\n  span {\n    margin-right: 15px;\n  }\n}\n.desc {\n  margin: 15px 0;\n  font-size: 14px;\n}\n.pager-container {\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 10px;\n  white-space: nowrap; // 不换行\n}\n.imgItem {\n  width: 240px;\n  height: 120px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}